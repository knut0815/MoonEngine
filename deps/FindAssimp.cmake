# - Find ASSIMP
# Find the ASSIMP includes and library
#
#  ASSIMP_INCLUDE_DIR - Where to find assimp includes
#  ASSIMP_LIBRARIES   - List of libraries when using assimp
#  ASSIMP_FOUND       - True if assimp was found

IF(ASSIMP_INCLUDE_DIR)
  SET(ASSIMP_FIND_QUIETLY TRUE)
ENDIF(ASSIMP_INCLUDE_DIR)

FIND_PATH(ASSIMP_INCLUDE_DIR "assimp"
  PATHS
  $ENV{ASSIMP_HOME}/inc 
  $ENV{ASSIMP_HOME}/include
  $ENV{EXTERNLIBS}/ASSIMP/inc
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw # Fink
  /opt/local # DarwinPorts
  /opt/csw # Blastwave
  /opt
  DOC "Assimp - Headers"
)
if(MSVC)
SET(ASSIMP_NAMES assimp-vc140-mt)
SET(ASSIMP_DBG_NAMES assimp-vc140-mt)
else(MSVC)
SET(ASSIMP_NAMES assimp)
SET(ASSIMP_DBG_NAMES assimp)
endif(MSVC)

FIND_LIBRARY(ASSIMP_LIBRARY NAMES ${ASSIMP_NAMES}
  PATHS
  $ENV{ASSIMP_HOME}
  $ENV{EXTERNLIBS}/ASSIMP
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  /sw
  /opt/local
  /opt/csw
  /opt
  PATH_SUFFIXES lib lib64
  DOC "ASSIMP - Library"
)



INCLUDE(FindPackageHandleStandardArgs)

IF(MSVC)
  # VisualStudio needs a debug version
  FIND_LIBRARY(ASSIMP_LIBRARY_DEBUG NAMES ${ASSIMP_DBG_NAMES}
    PATHS
    $ENV{ASSIMP_HOME}
    $ENV{EXTERNLIBS}/ASSIMP
    PATH_SUFFIXES lib lib64
    DOC "ASSIMP - Library (Debug)"
  )
  IF(ASSIMP_LIBRARY_DEBUG AND ASSIMP_LIBRARY)
    SET(ASSIMP_LIBRARIES optimized ${ASSIMP_LIBRARY} debug ${ASSIMP_LIBRARY_DEBUG})
  ENDIF(ASSIMP_LIBRARY_DEBUG AND ASSIMP_LIBRARY)

  FIND_PACKAGE_HANDLE_STANDARD_ARGS(ASSIMP DEFAULT_MSG ASSIMP_LIBRARY ASSIMP_LIBRARY_DEBUG ASSIMP_INCLUDE_DIR)

  MARK_AS_ADVANCED(ASSIMP_LIBRARY ASSIMP_LIBRARY_DEBUG ASSIMP_INCLUDE_DIR)
  
ELSE(MSVC)
  # rest of the world
  SET(ASSIMP_LIBRARIES ${ASSIMP_LIBRARY} )

  FIND_PACKAGE_HANDLE_STANDARD_ARGS(ASSIMP DEFAULT_MSG ASSIMP_LIBRARY ASSIMP_INCLUDE_DIR)
  
  MARK_AS_ADVANCED(ASSIMP_LIBRARY ASSIMP_INCLUDE_DIR)
  
ENDIF(MSVC)

IF(ASSIMP_FOUND)
  SET(ASSIMP_INCLUDE_DIRS ${ASSIMP_INCLUDE_DIR})
ENDIF(ASSIMP_FOUND)
